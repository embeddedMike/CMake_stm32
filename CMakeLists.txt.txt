### Author: Marcin Czekaj³o
project(EKG_Core C ASM)
cmake_minimum_required(VERSION 3.5.0)

### Check st-link
set(ST_FLASH ${CMAKE_BINARY_DIR}/stlink/build/Release/st-flash)

if (NOT EXISTS "${ST_FLASH}")
    message("-- Building \"st-link\"...")
    execute_process(COMMAND bash -c '${CMAKE_SOURCE_DIR}/build_stlink.sh')
    message("-- Building \"st-link\" finished.")
else ()
    message("-- \"st-link\" already built.")
endif ()

### Set compiler
include(CMakeForceCompiler)

SET(CMAKE_C_COMPILER arm-none-eabi-gcc)
SET(CMAKE_CXX_COMPILER arm-none-eabi-g++)
SET(CMAKE_ASM_COMPILER arm-none-eabi-as)
SET(CMAKE_OBJECT_COPY arm-none-eabi-objcopy)
SET(CMAKE_OBJECT_SIZE arm-none-eabi-size)

### Set flags
SET(C_FLAGS "-std=gnu99")
SET(COMMON_FLAGS "-DARM_MATH_CM4 -D__FPU_PRESENT -DSTM32 -DSTM32L4 -DSTM32L476VGTx -DSTM32L476G_DISCO -DDEBUG -DSTM32L476xx -DUSE_HAL_DRIVER -O0 -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -ffunction-sections -fmessage-length=0 \
    -specs=rdimon.specs -lc -lrdimon")
SET(CMAKE_C_FLAGS "${COMMON_FLAGS} ${C_FLAGS}")
SET(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/STM32L476VGTx_FLASH.ld)
SET(CMAKE_EXE_LINKER_FLAGS "-Wl,-gc-sections -T${LINKER_SCRIPT}")

### Set OpenOCD
set(CFG_FILEPATH ${CMAKE_SOURCE_DIR}/openocd.cfg)

### Set includes
include_directories(${CMAKE_SOURCE_DIR}/Drivers/STM32L4xx_HAL_Driver/Inc)
include_directories(${CMAKE_SOURCE_DIR}/Drivers/STM32L4xx_HAL_Driver/Inc/Legacy)
include_directories(${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Include)
include_directories(${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Device/ST/STM32L4xx/Include)
include_directories(${CMAKE_SOURCE_DIR}/Drivers/BSP/STM32L476G-Discovery)
include_directories(${CMAKE_SOURCE_DIR}/Application/Inc)

### Set sources
file(GLOB_RECURSE SOURCES ${CMAKE_SOURCE_DIR}/Application/Src/*.c)
file(GLOB_RECURSE HEADERS ${CMAKE_SOURCE_DIR}/Application/Inc/*.h)

file(GLOB_RECURSE CUBE_SOURCES ${CMAKE_SOURCE_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/*.c)
file(GLOB_RECURSE CUBE_HEADERS ${CMAKE_SOURCE_DIR}/Drivers/STM32L4xx_HAL_Driver/Inc/*.h)
list(FILTER CUBE_SOURCES EXCLUDE REGEX "${CMAKE_SOURCE_DIR}/Drivers/STM32L4xx_HAL_Driver/Src/.+_template.c")
list(FILTER CUBE_HEADERS EXCLUDE REGEX "${CMAKE_SOURCE_DIR}/Drivers/STM32L4xx_HAL_Driver/Inc/.+_template.h")

file(GLOB_RECURSE BSP_SOURCES ${CMAKE_SOURCE_DIR}/Drivers/BSP/STM32L476G-Discovery/*.c)
file(GLOB_RECURSE BSP_HEADERS ${CMAKE_SOURCE_DIR}/Drivers/BSP/STM32L476G-Discovery/*.h)

### Set targets and paths
set(ELF_FILE ${PROJECT_NAME}.elf)
set(HEX_FILE ${PROJECT_NAME}.hex)
set(BIN_FILE ${PROJECT_NAME}.bin)
set(HEX_FILEPATH ${CMAKE_BINARY_DIR}/${HEX_FILE})
set(BIN_FILEPATH ${CMAKE_BINARY_DIR}/${BIN_FILE})
set(ELF_FILEPATH ${CMAKE_BINARY_DIR}/${ELF_FILE})

add_library(CMSIS
        ${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Device/ST/STM32L4xx/Source/Templates/system_stm32l4xx.c
        ${CMAKE_SOURCE_DIR}/startup_stm32l476xx.s)

file(GLOB_RECURSE DSP_SOURCES ${CMAKE_SOURCE_DIR}/Drivers/CMSIS/DSP/Source/*.c)
file(GLOB_RECURSE DSP_HEADERS ${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Include/*.h)

add_library(DSP
        ${DSP_SOURCES} ${DSP_HEADERS} ${DSP_ASMS})

link_libraries(DSP ${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Lib/GCC/libarm_cortexM4lf_math.a)

add_executable(${ELF_FILE} ${SOURCES} ${HEADERS} ${CUBE_SOURCES} ${CUBE_HEADERS} ${BSP_SOURCES} ${BSP_HEADERS} ${LINKER_SCRIPT})

target_link_libraries(${ELF_FILE} CMSIS DSP)

add_custom_command(TARGET ${ELF_FILE} POST_BUILD
        COMMENT "Target size: ${ELF_FILE}"
        COMMAND ${CMAKE_OBJECT_SIZE} ${PROJECT_NAME}.elf)

add_custom_command(TARGET ${ELF_FILE} POST_BUILD
        COMMENT "Building: ${HEX_FILE}"
        COMMAND ${CMAKE_OBJECT_COPY} -Oihex $<TARGET_FILE:${ELF_FILE}> ${HEX_FILEPATH})

add_custom_command(TARGET ${ELF_FILE} POST_BUILD
        COMMENT "Building: ${BIN_FILE}"
        COMMAND ${CMAKE_OBJECT_COPY} -Obinary $<TARGET_FILE:${ELF_FILE}> ${BIN_FILEPATH})

add_custom_target(flash-stm COMMENT "FLASH_STM" COMMAND ${ST_FLASH} write ${BIN_FILEPATH} 0x8000000 DEPENDS ${ELF_FILE})